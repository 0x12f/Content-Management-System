name: Docker builder

on:
    push:
        tags:
            - '*'

jobs:
    # Run tests.
    # See also https://docs.docker.com/docker-hub/builds/automated-testing/
    test:
        runs-on: ubuntu-latest
        name: Testing
        steps:
            -   uses: actions/checkout@v3

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v2

            -   name: Build test version
                run: docker-compose --file docker-compose.test.yml build --build-arg=NO_DEV=""

            -   name: Run test PHP_CS
                run: docker-compose --file docker-compose.test.yml run phpcs

            -   name: Run test PHPUnit
                run: docker-compose --file docker-compose.test.yml run phpunit

    # build alpine
    debian:
        needs: test
        runs-on: ubuntu-latest
        name: Build base container
        steps:
            -   name: Check out the repo
                uses: actions/checkout@v3

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v2

            -   name: Log in to Docker Hub
                uses: docker/login-action@v2
                with:
                    username: ${{ secrets.DOCKER_HUB_USERNAME }}
                    password: ${{ secrets.DOCKER_HUB }}

            -   name: Extract metadata (tags, labels) for Docker
                id: meta
                uses: docker/metadata-action@v4
                with:
                    images: getwebspace/platform

            -   name: Build and push Docker image
                uses: docker/build-push-action@v3
                with:
                    context: .
                    push: true
                    file: docker/Dockerfile
                    tags: ${{ steps.meta.outputs.tags }}
                    labels: ${{ steps.meta.outputs.labels }}
                    build-args: |
                        NO_DEV=--no-dev
                        VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
                        COMMIT=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
