name: Docker builder

on:
    push:
        tags:
            - '*'

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build:
        runs-on: ubuntu-latest
        name: Build and test Docker container
        steps:
            - name: Check out the repo
              uses: actions/checkout@v3

            - name: Set tag name environment variables
              id: setup_env
              run: |
                  echo "NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
                  echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
                  echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

            - name: Build Docker image
              id: build_image
              uses: docker/build-push-action@v3
              with:
                  context: .
                  file: docker/Dockerfile
                  tags: |
                      ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
                      ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
                  build-args: |
                      NO_DEV=--no-dev
                      NAME=${{ env.NAME }}
                      BRANCH=${{ env.BRANCH }}
                      VERSION=${{ env.VERSION }}
                      COMMIT=${{ github.sha }}

            - name: Run tests
              run: make run-test

    push:
        runs-on: ubuntu-latest
        needs: build
        if: success()
        name: Push Docker container
        steps:
            - name: Log in to the Container registry
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Push Docker image
              uses: docker/build-push-action@v3
              with:
                  context: .
                  file: docker/Dockerfile
                  push: true
                  tags: |
                      ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
                      ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
