{% block editor %}
    {% set editorId = random() %}

    {% if args is empty %}
        {% set args = {} %}
    {% endif %}

    <div id="spinner-{{ editorId }}" class="spinner-grow text-primary mx-auto mt-5" role="status" style="display: block;">
        <span class="sr-only">Loading...</span>
    </div>

    {% include 'cup/form.twig' with {
        'label': label,
        'type': 'textarea',
        'name': name,
        'args': args|merge({'id': 'wysiwygeditor-' ~ editorId, 'method': null, 'style': 'opacity: 0;'})
    } %}

    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', async () => {
            await window.loader([
                '/assets/js/plugin/codemirror/lib/codemirror.css?v={{ SHA }}',
                '/assets/js/plugin/froala/froala_editor.pkgd.css?v={{ SHA }}',
                '/assets/js/plugin/froala/froala_style.css?v={{ SHA }}',
                '/assets/js/plugin/codemirror/lib/codemirror.js?v={{ SHA }}',
                '/assets/js/plugin/codemirror/addon/mode/overlay.js?v={{ SHA }}',
                '/assets/js/plugin/codemirror/addon/selection/selection-pointer.js?v={{ SHA }}',
                '/assets/js/plugin/codemirror/mode/css/css.js?v={{ SHA }}',
                '/assets/js/plugin/codemirror/mode/htmlmixed/htmlmixed.js?v={{ SHA }}',
                '/assets/js/plugin/codemirror/mode/javascript/javascript.js?v={{ SHA }}',
                '/assets/js/plugin/codemirror/mode/markdown/markdown.js?v={{ SHA }}',
                '/assets/js/plugin/codemirror/mode/twig/twig.js?v={{ SHA }}',
                '/assets/js/plugin/codemirror/mode/xml/xml.js?v={{ SHA }}',
                '/assets/js/plugin/froala/froala_editor.pkgd.js?v={{ SHA }}',
            ]);

            if ($.FE && $.FE.LANGUAGE) {
                $.FE.LANGUAGE['{{ _language }}'] = {
                    translation: {{ _cup_editor_locale() }}
                };
            }

            (function init() {
                let $editor = $('#wysiwygeditor-{{ editorId }}:visible');

                if ($editor.length && typeof $editor.froalaEditor === 'function') {
                    $('#spinner-{{ editorId }}').hide();
                    $editor.css('opacity', 1);

                    if ('{{ item.type }}' === 'text' || '{{ args.text_mode }}') {
                        CodeMirror.fromTextArea($editor.get(0), {
                            lineNumbers: true,
                            readOnly: '{{ args.readonly }}',
                        });
                    } else {
                        $editor.froalaEditor({
                            iframe: true,
                            width: '100%',
                            height: '345',
                            language: '{{ _language }}',

                            htmlRemoveTags: [],
                            htmlAllowedAttrs: ['.*'],

                            toolbarButtons: [
                                'bold', 'italic', 'underline', 'strikeThrough', '|', 'paragraphFormat', 'fontSize', 'color', 'align', '|',
                                'insertTable', 'insertLink', 'insertImage', 'insertVideo', 'embedly', 'insertFile', '|', 'clearFormatting', '|', 'undo', 'redo', '|', 'html'
                            ],

                            fileMaxSize: 1024 * 1024 * 3,
                            fileUploadMethod: 'POST',
                            fileUploadParam: 'file',
                            fileUploadParams: {'path_only': true},
                            fileUploadURL: '/file/upload',

                            imageMaxSize: 5 * 1024 * 1024,
                            imageAllowedTypes: ['jpeg', 'jpg', 'png'],
                            imageUploadMethod: 'POST',
                            imageUploadParam: 'image',
                            imageUploadParams: {'path_only': true},
                            imageUploadURL: '/file/upload',
                            imageManagerLoadURL: '/cup/file/image',
                            imageManagerDeleteURL: '/cup/file/image/delete',

                            videoAllowedProviders: ['youtube', 'vimeo'],
                            videoMaxSize: 1024 * 1024 * 15,
                            videoAllowedTypes: ['mp4', 'webm'],
                            videoUploadMethod: 'POST',
                            videoUploadParam: 'video',
                            videoUploadParams: {'path_only': true},
                            videoUploadURL: '/file/upload',

                            codeBeautifierOptions: {
                                end_with_newline: true,
                                indent_inner_html: true,
                                extra_liners: "['p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'blockquote', 'pre', 'ul', 'ol', 'table', 'dl']",
                                brace_style: 'expand',
                                indent_char: ' ',
                                indent_size: 4,
                                wrap_line_length: 0
                            },

                            multiLine: true,
                            pastePlain: true,
                            htmlSimpleAmpersand: true,
                            htmlAllowComments: true,
                            htmlUntouched: true,
                            htmlExecuteScripts: false,
                            fullPage: false,
                            entities: ''
                        });
                    }
                } else {
                    setTimeout(init, 1000);
                }
            })();
        });
    </script>
{% endblock %}
