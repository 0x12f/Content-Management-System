<div class="quick-sidebar">
    <a href="#" class="close-quick-sidebar">
        <i class="fa fa-times"></i>
    </a>

    <div class="quick-sidebar-wrapper">
        <ul class="nav nav-tabs nav-line nav-color-secondary" role="tablist">
            {% if parameter('notification_is_enabled', 'yes') == 'yes' %}
                <li class="nav-item">
                    <a class="nav-link active show" data-toggle="tab" href="#notif">
                        <i class="fa fa-bell"></i>
                    </a>
                </li>
            {% endif %}

            <li class="nav-item">
                <a class="nav-link {{ parameter('notification_is_enabled', 'yes') == 'no' ? 'active show' : '' }}" data-toggle="tab" href="#task">
                    <i class="fas fa-tasks"></i>
                </a>
            </li>

            {% for plugin in plugins.where('sidebar', true) %}
                <li class="nav-item">
                    <a class="nav-link" data-toggle="tab" href="#plugin-{{ plugin.getCredentials('name') }}">
                        <i class="fas fa-puzzle-piece"></i>
                    </a>
                </li>
            {% endfor %}

            <li class="nav-item">
                <a class="nav-link" data-toggle="tab" href="#cog">
                    <i class="fas fa-cog"></i>
                </a>
            </li>
        </ul>

        <div class="tab-content mt-3">

            {# TAB: Notifications #}
            {% if parameter('notification_is_enabled', 'yes') == 'yes' %}
                <div class="tab-chat tab-pane fade show active" id="notif">
                    <div class="quick-wrapper">
                        <div class="quick-scroll scrollbar-outer">
                            <div class="quick-content">
                                <div class="notif-center list-group list-group-flush">
                                    <div data-notif-empty>
                                        <div class="text-center my-3">
                                            {{ 'Notifications yet'|locale }}
                                        </div>
                                    </div>

                                    <div class="list-group-item flex-column pl-0" data-notif-item>
                                        <div class="row">
                                            <div class="col-12">
                                                <h5 class="text-truncate my-0"></h5>
                                            </div>
                                            <div class="col-12 text-right">
                                                <small class="date text-small text-muted"></small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            {% endif %}

            {# TAB: Tasks #}
            <div class="tab-chat tab-pane fade {{ parameter('notification_is_enabled', 'yes') == 'no' ? 'show active' : '' }}" id="task">
                <div class="quick-wrapper">
                    <div class="quick-scroll scrollbar-outer">
                        <div class="quick-content">
                            <div class="task-center list-group list-group-flush">
                                <div data-task-empty>
                                    <div class="text-center my-3">
                                        {{ 'No data about background tasks'|locale }}
                                    </div>
                                </div>

                                <div class="list-group-item flex-column pl-0" data-task-item>
                                    <div class="row">
                                        <div class="col-7">
                                            <h5 class="text-truncate my-0"></h5>
                                        </div>
                                        <div class="col-5 text-right">
                                            <div class="row">
                                                <div class="col-12"><small class="status text-small"></small></div>
                                                <div class="col-12"><small class="date text-small text-muted"></small></div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-12">
                                            <div class="progress mt-2" style="display: none; height: 10px">
                                                <div class="progress-bar" style="width: 0"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            {# TAB: Plugin tabs #}
            {% for plugin in plugins.where('sidebar', true) %}
                {% for param in plugin.getSidebarTab() %}
                    <div class="tab-pane fade" id="plugin-{{ plugin.getCredentials('name') }}">
                        <div class="quick-wrapper">
                            <div class="quick-scroll scrollbar-outer">
                                <div class="quick-content">
                                    {% if param.twig %}
                                        {% include param.twig %}
                                    {% elseif param.html %}
                                        {{ param.html|raw }}
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            {% endfor %}

            {# TAB: Cog #}
            <div class="tab-chat tab-pane fade" id="cog">
                <div class="quick-wrapper">
                    <div class="scroll-wrapper scrollbar-outer" style="position: relative;">
                        <div class="quick-content">
                            <form action="/cup/task/run" method="post" class="row m-0" onsubmit="return confirm('{{ 'Are you sure you want to perform this action now?'|locale }}');">
                                <button type="submit" name="task" value="App\Domain\Tasks\SearchIndexTask" class="col-12 btn btn-dark mb-1">
                                    <div class="quick-actions-item">
                                        <i class="fas fa-search"></i>
                                        <span class="text">{{ 'Update search index'|locale }}</span>
                                    </div>
                                </button>

                                <button type="submit" name="task" value="App\Domain\Tasks\ReConvertImageTask" class="col-12 btn btn-dark mb-1">
                                    <div class="quick-actions-item">
                                        <i class="fas fa-images"></i>
                                        <span class="text">{{ 'Convert all images'|locale }}</span>
                                    </div>
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        let
            data = {
                notifications: [],
                tasks: {},
            },
            $quickSidebar = $('.quick-sidebar'),
            $notifList = $quickSidebar.find('.notif-center'),
            $elNotifEmpty = $quickSidebar.find('[data-notif-empty]'),
            $elNotifItem = $quickSidebar.find('[data-notif-item]').detach().removeAttr('data-notif-item'),
            $taskList = $quickSidebar.find('.task-center'),
            $elTaskEmpty = $quickSidebar.find('[data-task-empty]'),
            $elTaskItem = $quickSidebar.find('[data-task-item]').detach().removeAttr('data-task-item');

        (function refresh() {
            $.post('/cup/refresh', data, (res) => {
                if (res) {
                    // notification
                    if (res.notification && res.notification.length) {
                        $elNotifEmpty.hide();

                        for (let notification of res.notification) {
                            let $buf = $elNotifItem.clone();

                            $buf.find('h5').text(notification.title);
                            $buf.find('small.date').text(
                                moment
                                    .tz(notification.date, 'YYYY-MM-DD hh:mm:ss', 'utc')
                                    .tz('{{ parameter('common_timezone', 'Europe/Kiev') }}')
                                    .format('{{ parameter('common_date_format', 'j-m-Y, H:i')|dfm }}')
                            );

                            $notifList.prepend($buf);
                            data.notifications.push(notification.uuid);
                        }
                    }

                    // task
                    if (res.task && (res.task.new.length || res.task.update.length || res.task.delete.length)) {
                        $elTaskEmpty.hide();

                        function renderTask(task, $buf) {
                            let color = '', text = '';

                            // color & status
                            switch (task.status) {
                                case 'queue': {
                                    color = 'text-muted';
                                    text = '{{ 'Queue'|locale }}';
                                    break;
                                }
                                case 'work': {
                                    color = 'text-info';
                                    text = '{{ 'Work'|locale }}';
                                    break;
                                }
                                case 'done': {
                                    color = 'text-success';
                                    text = '{{ 'Done'|locale }}';
                                    break;
                                }
                                case 'fail': {
                                    color = 'text-danger';
                                    text = '{{ 'Error'|locale }}';
                                    break;
                                }
                                case 'cancel': {
                                    color = 'text-warning';
                                    text = '{{ 'Canceled'|locale }}';
                                    break;
                                }
                                case 'delete': {
                                    color = 'text-warning';
                                    text = '{{ 'Deleted'|locale }}';
                                    break;
                                }
                            }

                            $buf.attr('data-task-uuid', task.uuid);
                            $buf.find('h5').text(task.title ? task.title : task.action);
                            $buf.find('.progress').toggle(task.progress > 0 && task.status === 'work');
                            $buf.find('.progress-bar').css('width', task.progress + '%');
                            $buf.find('small.status').attr('class', color).text(text);
                            $buf.find('small.date').text(
                                moment
                                    .tz(task.date, 'YYYY-MM-DD hh:mm:ss', 'utc')
                                    .tz('{{ parameter('common_timezone', 'Europe/Kiev') }}')
                                    .format('{{ parameter('common_date_format', 'j-m-Y, H:i')|dfm }}')
                            );

                            return $buf;
                        }

                        // new
                        for (let task of res.task.new) {
                            $taskList.prepend(renderTask(task, $elTaskItem.clone()));
                            data.tasks[task.uuid] = {status: task.status, progress: task.progress};
                        }

                        // update
                        for (let task of res.task.update) {
                            renderTask(task, $taskList.find('[data-task-uuid="' + task.uuid + '"]'));
                            data.tasks[task.uuid] = {status: task.status, progress: task.progress};
                        }

                        // delete
                        for (let uuid of res.task.delete) {
                            $taskList.find('[data-task-uuid="' + uuid + '"]').remove();
                            delete data.tasks[uuid];
                        }
                    }
                }
            });

            setTimeout(refresh, 5000);
        })();
    });
</script>
