worker_processes auto;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 2;
    types_hash_max_size 2048;
    client_max_body_size 20M;

    server_tokens off;

    ##
    # Gzip Settings
    ##
    gzip on;
    gzip_comp_level 5
    gzip_disable "msie6";
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    ##
    # Push stream
    ##
    push_stream_shared_memory_size					32M;
    push_stream_max_channel_id_length				200;

    # max messages to store in memory
    push_stream_max_messages_stored_per_channel		20;
    push_stream_longpolling_connection_ttl			30s;
    push_stream_message_template					"{\"id\":~id~,\"channel\":\"~channel~\",\"content\":~text~}"; #\"tag\":\"~tag~\", \"time\":\"~time~\", \"eventid\":\"~event-id~\"
    push_stream_authorized_channels_only			off;
    push_stream_allowed_origins						"*";

    ##
    # SSL Settings
    ##
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    # expires map
    map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;
        text/css                   max;
        application/javascript     max;
        ~image/                    max;
    }

    ##
    # Host Settings
    ##
    server {
        listen   80;
        listen   [::]:80 default ipv6only=on;

        server_name _;
        sendfile off;

        error_log /dev/stdout info;
        access_log /dev/stdout;

        charset		utf-8;
        expires     $expires;

        root        /var/container/public;

        location /.git {
           deny all;
           return 403;
        }

        location /channels-stats {
            # activate channels statistics mode for this location
            push_stream_channels_statistics;

            # query string based channel id
            push_stream_channels_path $arg_id;
        }

        location /pub {
            push_stream_publisher								;
            push_stream_channels_path							$arg_id;
            push_stream_store_messages							off;
            client_max_body_size								32k;
            client_body_buffer_size								32k;

            if ($arg_tests = "on") {
                push_stream_channels_path						"test_$1";
            }
        }

        location ~ /sub/(.*) {
            # activate subscriber mode for this location
            push_stream_subscriber								long-polling;

            push_stream_last_received_message_time				"$arg_time";
            push_stream_last_received_message_tag				"$arg_tag";
            push_stream_last_event_id							"$arg_eventid";

            # positional channel path
            push_stream_channels_path							$1;

            if ($arg_tests = "on") {
                push_stream_channels_path						"test_$1";
            }
        }

        location / {
            try_files $uri /index.php?$query_string;
        }

        # fix ansi characters in file path
        location ~ /uploads(/.*) {
            set   $query $1;
            try_files /uploads$query /index.php;
        }

        # remove this rule in production mode
        #location /robots.txt {
        #    add_header  Content-Type text/plain;
        #    return      200 "User-agent: *\nDisallow: /\n";
        #}

        location ~ \.php$ {
            fastcgi_pass                php:9000;
		    fastcgi_index               index.php;
            fastcgi_split_path_info     ^(.+.php)(.*)$;
            fastcgi_param               SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include						fastcgi_params;
            fastcgi_read_timeout        300;
        }
    }
}
